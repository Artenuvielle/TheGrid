syntax = "proto2";


message ProtobufMessagePacket {
	enum Header {
		STOC_PACKET_TYPE_GAME_STATE_BROADCAST = 101;
		STOC_PACKET_TYPE_PLAYER_IDENTIFICATION = 102;
		STOC_PACKET_TYPE_PLAYER_POSITION_BROADCAST = 103;
		STOC_PACKET_TYPE_PLAYER_CHANGED_LIFE_BROADCAST = 104;
		STOC_PACKET_TYPE_PLAYER_CHANGED_SHIELD_CHARGE_BROADCAST = 105;
		STOC_PACKET_TYPE_DISK_STATUS_BROADCAST = 106;
		STOC_PACKET_TYPE_DISK_THROW_BROADCAST = 107;
		STOC_PACKET_TYPE_DISK_POSITION_BROADCAST = 108;
		CTOS_PACKET_TYPE_START_GAME_REQUEST = 201;
		CTOS_PACKET_TYPE_PLAYER_POSITION_INFORMATION = 202;
		CTOS_PACKET_TYPE_PLAYER_THROW_INFORMATION = 203;
	}
	required Header header = 1;

	optional PlayerInformation player_information = 2;
	optional GameInformation game_information = 3;
	optional PlayerCounterInformation player_counter_information = 4;
	optional PlayerPosition player_position = 5;
	optional DiskStatusInformation disk_status_information = 6;
	optional DiskThrowInformation disk_throw_information = 7;
	optional DiskPosition disk_position = 8;
}


message PositionPacketType {
	required float x = 1;
	required float y = 2;
	required float z = 3;
}

message OrientationPacketType {
	required float x = 1;
	required float y = 2;
	required float z = 3;
	required float w = 4;
}


message PlayerInformation {
	required int32 player_id = 1;
	required int32 faction_id = 2;
};

message GameInformation {
	required bool is_running = 1;
	optional int32 winning_player_id = 2;
};

message PlayerCounterInformation {
	required int32 player_id = 1;
	required int32 faction_id = 2;
	required int32 counter = 3;
};

message PlayerPosition {
	required int32 player_id = 1;
	required int32 faction_id = 2;
	required PositionPacketType head_pos = 3;
	required OrientationPacketType head_rot = 4;
	required PositionPacketType main_hand_pos = 5;
	required OrientationPacketType main_hand_rot = 6;
	required PositionPacketType off_hand_pos = 7;
	required OrientationPacketType off_hand_rot = 8;
};

message DiskStatusInformation {
	required int32 player_id = 1;
	required int32 faction_id = 2;
	required int32 disk_status_id = 3;
};

message DiskThrowInformation {
	required int32 player_id = 1;
	required int32 faction_id = 2;
	required PositionPacketType disk_pos = 3;
	required PositionPacketType disk_momentum = 4;
};

message DiskPosition {
	required int32 player_id = 1;
	required int32 faction_id = 2;
	required PositionPacketType disk_pos = 3;
	required OrientationPacketType disk_rot = 4;
}